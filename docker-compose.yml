services:
    db:
        image: mariadb
        restart: unless-stopped
        container_name: '${PROJECT_NAME}_mariadb'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
            MYSQL_DATABASE: '${DB_NAME}'
            MYSQL_USER: '${DB_USER}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MARIADB_AUTO_UPGRADE: 1
            MARIADB_INITDB_SKIP_TZINFO: 1
        healthcheck:
            test: ["CMD-SHELL", "healthcheck.sh --connect --innodb_initialized"]
            start_period: 10s
            interval: 10s
            timeout: 5s
            retries: 3

        volumes:
            - './data/db_data:/var/lib/mysql'
    wordpress:
        depends_on:
            - db
        image: 'wordpress:latest'
        restart: unless-stopped
        container_name: '${PROJECT_NAME}_wordpress'
        volumes:
            - './data/wp_data:/var/www/html'
            - './config/php/php.ini:/usr/local/etc/php/conf.d/php.ini'
        environment:
            WORDPRESS_DB_HOST: 'db:3306'
            WORDPRESS_DB_USER: '${DB_USER}'
            WORDPRESS_DB_PASSWORD: '${DB_PASSWORD}'
            WORDPRESS_DB_NAME: '${DB_NAME}'
            WORDPRESS_TABLE_PREFIX: '${TABLE_PREFIX}'
            WORDPRESS_CONFIG_EXTRA: |
                define( 'FS_CHMOD_DIR', ( 0755 & ~ umask() ) );
                define( 'FS_CHMOD_FILE', ( 0644 & ~ umask() ) );
                define( 'WP_POST_REVISIONS', 10 );
            #check https://developer.wordpress.org/advanced-administration/wordpress/wp-config/ for more 
        healthcheck:
            test: ["CMD-SHELL", "curl -f http://${PROJECT_BASE_URL}"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s

    nginx:
        image: nginx
        depends_on:
            - wordpress
            - db
        container_name: '${PROJECT_NAME}_nginx'
        restart: unless-stopped
        volumes:
            - './data/wp_data:/var/www/html'
            - './config/nginx/nginx.conf.template:/etc/nginx/conf.d/nginx.conf.template'
            - './log/nginx:/var/log/nginx'
        environment:
            - 'PROJECT_BASE_URL=${PROJECT_BASE_URL}'
        command: '/bin/bash -c "envsubst ''$$PROJECT_BASE_URL'' < /etc/nginx/conf.d/nginx.conf.template > /etc/nginx/conf.d/default.conf && exec nginx -g ''daemon off;''"'
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:80"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
        labels:
            - 'traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`wp.${PROJECT_BASE_URL}`)'
    phpmyadmin:
        image: 'phpmyadmin/phpmyadmin:latest'
        restart: unless-stopped
        depends_on:
            - db
        container_name: '${PROJECT_NAME}_phpmyadmin'
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
            MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'

        healthcheck:
            test: ["CMD", "curl", "-f", "http://pma.${PROJECT_BASE_URL}"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
        labels:
            - 'traefik.http.routers.${PROJECT_NAME}_pma.rule=Host(`pma.${PROJECT_BASE_URL}`)'
            - 'traefik.http.routers.${PROJECT_NAME}_pma.entrypoints=websecure'
            - 'traefik.http.routers.${PROJECT_NAME}_pma.tls.certresolver=myhttpchallenge'
            - 'traefik.enable=true'
    varnish:
        image: wodby/varnish
        container_name: '${PROJECT_NAME}_varnish'
        restart: unless-stopped
        depends_on:
            - nginx
        environment:
            VARNISH_SECRET: secret
            VARNISH_BACKEND_HOST: nginx
            VARNISH_BACKEND_PORT: 80
            VARNISH_CONFIG_PRESET: wordpress
            VARNISH_ALLOW_UNRESTRICTED_PURGE: 1
            VARNISH_CACHE_STATIC_FILES: 1
        healthcheck:
            test: ["CMD-SHELL", "curl -f http://${PROJECT_BASE_URL}"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
        labels:
            - 'traefik.http.services.${PROJECT_NAME}_varnish.loadbalancer.server.port=6081'
            - 'traefik.http.routers.${PROJECT_NAME}_varnish.rule=Host(`${PROJECT_BASE_URL}`)||Host(`www.${PROJECT_BASE_URL}`)'
            - 'traefik.http.routers.${PROJECT_NAME}_varnish.tls.domains[0].main=${PROJECT_BASE_URL}'
            - 'traefik.http.routers.${PROJECT_NAME}_varnish.tls.domains[0].sans=www.${PROJECT_BASE_URL}'
            - 'traefik.http.routers.${PROJECT_NAME}_varnish.entrypoints=websecure'
            - 'traefik.http.routers.${PROJECT_NAME}_varnish.tls.certresolver=myhttpchallenge'
            - 'traefik.enable=true'